name: Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.get_version.outputs.new_version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v42
        with:
          files: |
            package.json
      - name: Get Version
        id: get_version
        run: |
          if [[ ${{ steps.changed-files.outputs.any_changed }} == 'false' ]]; then
            echo "new_version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
          else
            npm version patch --no-git-tag-version
            NEW_VERSION=$(node -p "require('./package.json').version")
            echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
            git config --global user.email "actions@github.com"
            git config --global user.name "GitHub Actions"
            git add package.json
            git commit -m "Bump version to $NEW_VERSION"
            git push origin main
          fi
      - name: Create Release
        if: ${{ steps.changed-files.outputs.any_changed == 'true' }}
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.new_version }}
          name: Release v${{ steps.get_version.outputs.new_version }}
          draft: false
          prerelease: false

  build-and-publish:
    name: Build and Publish Docker Image
    runs-on: ubuntu-latest
    needs: [create-release]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/sprintsync-api:v${{ needs.create-release.outputs.new_version }}
